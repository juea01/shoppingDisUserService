spring.application.name=user-service
spring.config.import=optional:configserver:http://localhost:8888
server.port=8100


## URL for production working with docker containers
#eureka.client.serviceUrl.defaultZone=http://shoppingdistrict-naming-server:8761/eureka
## URL for local development
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka



###from Spring boot 2.4 +, data.sql is executed before table are created (during restart) and therefore
### following statement is needed
spring.jpa.defer-datasource-initialization=true

spring.jap.hibernate.ddl-auto=none
spring.datasource.username=root
spring.datasource.password=password123@

## URL for production working with docker containers
#spring.datasource.url=jdbc:mysql://ms1:3306/shopping_district
## URL for local development (for example unit testing)
spring.datasource.url=jdbc:mysql://localhost:3306/shopping_district


#To validate the JWT token that comes in with the request
## URL for production working with docker containers
#spring.security.oauth2.resourceserver.jwt.jwk-set-uri = http://keycloak:8080/realms/shoppingdistrictdev/protocol/openid-connect/certs
## URL for local development
spring.security.oauth2.resourceserver.jwt.jwk-set-uri = http://localhost:8080/realms/Tech-District/protocol/openid-connect/certs



logging.level.org.springframework = info
##spring.jackson.serialization.write-date-as-timestamps=false
##spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://uaa:8888/uaa/token_keys


user-service.minimum=5
user-service.maximum=15

#spring.security.user.name=username
#spring.security.user.password=password
